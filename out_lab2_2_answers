
Q1: (cin only) What happens when you run the code above? Explain why
Answer Q1: When enter 10, the flag is false so the program keeps running then enter 4.5, the flag is still false but the program extracts only 4 and left 0.5 in the buffer so it keeps looping without accepting new value.

Q2: (cin + fail+ignore) What happens when you run the code above? Explain why.
Answer Q2: When enter 10, the flag is false so the program keeps running then enter 4.5, the flag is still false, extracts 4 and leave 0.5 in the buffer but this time, the program let you enter another value abc. When enter abc, the flag is set to true. Nothing is left in the buffer and it let you enter again. When enter a, the flag is set to true and the program terminated.

Q3: Is the problem of reading an integer value solved? Explain your reasoning.
Answer Q3: No because when enter 4.5, the flag is set to false and it didn't say is not an integer.

Q4: (getline only) What happens when you run the code above? Explain why.
Answer Q4: 10 is read as an integer, 4.5 is read as 4. And when enter abc, it terminate with an error stoi because abc cannot be converted to an int 

Q5: (getline+stoi) What happens when you run the code above? Explain why.
Answer Q5: Just like Q4, 10 is read normal, 4.5 is read as 4 but when enter abc, the error is displayed but is not terminated because of the inclusion of the try catch function and so it will display the previous accepted output which is 4.

Q6: Explain your method to validate integer values entered
Answer Q6: Using what I've learnt from the previous question, I check the if its an integer by using s.length() and then try catch function to keep the loop going despite not entering the correct type.
